// Generated by HybirdPB CodeGenerator(1.3.0). DO NOT EDIT!
// Generation date is 2024-03-14 17:31:17

import { MPRpc } from '@mpaas/rpc';
import { ArticleList0JsonGetReq } from './ArticleList0JsonGetReq';

import { BannerJsonPostReq } from './BannerJsonPostReq';
import { BannerArrayModel } from './EntityModel';
import { PostReqModle } from './PostReqModle';

export class RpcDemoClient {
  //post
  async bannerJsonPost(requestParam: BannerJsonPostReq): Promise<BannerArrayModel> {
    let headers: Map<string, string> = new Map();
    headers.set("rpcHeader1", "测试header1");
    headers.set("rpcHeader2", "测试header2");

    return MPRpc.executeRpc<BannerArrayModel>(this, {
      operationType: "com.harmonyos.post",
      needSign: true,
      isPb: false,
      header: headers,
      timeout:2000
    }, requestParam);
  }

  //router
  async postRouter(): Promise<string> {
    return MPRpc.executeRpc<string>(this, {
      operationType: "com.antcloud.request.router",
      needSign: true,
      isPb: false
    });
  }

  //post
  async post1(requestParam: PostReqModle): Promise<string> {
    return MPRpc.executeRpc<string>(this, {
      operationType: "com.antcloud.request.post",
      needSign: true,
      isPb: false
    }, requestParam);
  }

  //limt
  async postLimt(requestParam: PostReqModle): Promise<string> {
    return MPRpc.executeRpc<string>(this, {
      operationType: "com.antcloud.request.post",
      needSign: true,
      isPb: false
    }, requestParam);
  }

  //熔断
  async postRongduan(requestParam: ArticleList0JsonGetReq): Promise<string> {
    return MPRpc.executeRpc<string>(this, {
      operationType: "com.antcloud.request.rongduan",
      needSign: true,
      isPb: false
    }, requestParam);
  }
}